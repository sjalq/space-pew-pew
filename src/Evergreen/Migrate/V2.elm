module Evergreen.Migrate.V2 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Evergreen.V1.Table
import Evergreen.V1.Types
import Evergreen.V2.Table
import Evergreen.V2.Types
import Lamdera.Migrations exposing (..)
import Dict


frontendModel : Evergreen.V1.Types.FrontendModel -> ModelMigration Evergreen.V2.Types.FrontendModel Evergreen.V2.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V1.Types.BackendModel -> ModelMigration Evergreen.V2.Types.BackendModel Evergreen.V2.Types.BackendMsg
backendModel old =
    ModelMigrated ( migrate_Types_BackendModel old, Cmd.none )


frontendMsg : Evergreen.V1.Types.FrontendMsg -> MsgMigration Evergreen.V2.Types.FrontendMsg Evergreen.V2.Types.FrontendMsg
frontendMsg old =
    MsgUnchanged


toBackend : Evergreen.V1.Types.ToBackend -> MsgMigration Evergreen.V2.Types.ToBackend Evergreen.V2.Types.BackendMsg
toBackend old =
    MsgMigrated ( migrate_Types_ToBackend old, Cmd.none )


backendMsg : Evergreen.V1.Types.BackendMsg -> MsgMigration Evergreen.V2.Types.BackendMsg Evergreen.V2.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V1.Types.ToFrontend -> MsgMigration Evergreen.V2.Types.ToFrontend Evergreen.V2.Types.FrontendMsg
toFrontend old =
    MsgMigrated ( migrate_Types_ToFrontend old, Cmd.none )


migrate_Types_BackendModel : Evergreen.V1.Types.BackendModel -> Evergreen.V2.Types.BackendModel
migrate_Types_BackendModel old =
    { gameCount = 0
    , pewsPewed = 0
    }


migrate_Types_FrontendModel : Evergreen.V1.Types.FrontendModel -> Evergreen.V2.Types.FrontendModel
migrate_Types_FrontendModel old =
    { key = old.key
    , gameState = old.gameState |> migrate_Types_GameState
    , gameCount = 0
    , pewsPewed = 0
    }


migrate_Table_Table : (a_old -> a_new) -> Evergreen.V1.Table.Table a_old -> Evergreen.V2.Table.Table a_new
migrate_Table_Table migrate_a old =
    case old of
        Evergreen.V1.Table.Table p0 p1 ->
            Evergreen.V2.Table.Table p0 (p1 |> Dict.map (\k -> migrate_a))


migrate_Types_Body : Evergreen.V1.Types.Body -> Evergreen.V2.Types.Body
migrate_Types_Body old =
    { id = old.id
    , mass = old.mass
    , position = old.position |> migrate_Types_Vector2D
    , velocity = old.velocity |> migrate_Types_Vector2D
    , radius = old.radius
    , bodyType = old.bodyType |> migrate_Types_BodyType
    }


migrate_Types_BodyType : Evergreen.V1.Types.BodyType -> Evergreen.V2.Types.BodyType
migrate_Types_BodyType old =
    case old of
        Evergreen.V1.Types.Conceptual ->
            Evergreen.V2.Types.Conceptual

        Evergreen.V1.Types.Planet p0 ->
            Evergreen.V2.Types.Planet p0

        Evergreen.V1.Types.Ship p0 ->
            Evergreen.V2.Types.Ship
                { rotation = p0.rotation
                , rotationSpeed = p0.rotationSpeed
                , propulsion = p0.propulsion |> migrate_Types_PropulsionType
                , projectile = p0.projectile |> migrate_Types_ProjectileType
                , crew = p0.crew
                }

        Evergreen.V1.Types.Projectile p0 ->
            Evergreen.V2.Types.Projectile (p0 |> migrate_Types_ProjectileType)


migrate_Types_GameState : Evergreen.V1.Types.GameState -> Evergreen.V2.Types.GameState
migrate_Types_GameState old =
    { bodies = old.bodies |> migrate_Table_Table migrate_Types_Body
    , timeElapsed = old.timeElapsed
    , space = old.space |> migrate_Types_Space
    }


migrate_Types_ProjectileType : Evergreen.V1.Types.ProjectileType -> Evergreen.V2.Types.ProjectileType
migrate_Types_ProjectileType old =
    case old of
        Evergreen.V1.Types.Kenetic p0 ->
            Evergreen.V2.Types.Kenetic p0

        Evergreen.V1.Types.Photonic p0 ->
            Evergreen.V2.Types.Photonic p0


migrate_Types_PropulsionType : Evergreen.V1.Types.PropulsionType -> Evergreen.V2.Types.PropulsionType
migrate_Types_PropulsionType old =
    case old of
        Evergreen.V1.Types.Newtonian p0 ->
            Evergreen.V2.Types.Newtonian p0

        Evergreen.V1.Types.LittleGrayMenTech p0 ->
            Evergreen.V2.Types.LittleGrayMenTech p0


migrate_Types_Space : Evergreen.V1.Types.Space -> Evergreen.V2.Types.Space
migrate_Types_Space old =
    old


migrate_Types_ToBackend : Evergreen.V1.Types.ToBackend -> Evergreen.V2.Types.ToBackend
migrate_Types_ToBackend old =
    case old of
        Evergreen.V1.Types.NoOpToBackend ->
            Evergreen.V2.Types.NoOpToBackend


migrate_Types_ToFrontend : Evergreen.V1.Types.ToFrontend -> Evergreen.V2.Types.ToFrontend
migrate_Types_ToFrontend old =
    case old of
        Evergreen.V1.Types.NoOpToFrontend ->
            Evergreen.V2.Types.NoOpToFrontend


migrate_Types_Vector2D : Evergreen.V1.Types.Vector2D -> Evergreen.V2.Types.Vector2D
migrate_Types_Vector2D old =
    old
